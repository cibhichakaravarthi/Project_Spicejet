<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="9" hostname="Cibhichakaravarthi" failures="0" tests="12" name="Test" time="0.156" errors="0" timestamp="2024-07-09T22:06:42 IST">
  <testcase classname="utils.BaseClass" name="@BeforeTest setUp" time="-1.720543002803E9">
    <failure type="org.testng.TestNGException" message="
Parameter &amp;apos;browser&amp;apos; is required by BeforeTest on method setUp but has not been marked @Optional or defined
in C:\Users\cibhi\eclipse-workspace\Project_SpiceJet\testng.xml">
      <![CDATA[org.testng.TestNGException: 
Parameter 'browser' is required by BeforeTest on method setUp but has not been marked @Optional or defined
in C:\Users\cibhi\eclipse-workspace\Project_SpiceJet\testng.xml
... Removed 21 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeTest setUp -->
  <testcase classname="utils.BaseClass" name="@BeforeTest urlVerify" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeTest urlVerify -->
  <testcase classname="utils.BaseClass" name="@AfterTest quit" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest quit -->
  <testcase classname="CommonRunner.SignupTest" name="positiveSignupScenario" time="0.0">
    <skipped/>
  </testcase> <!-- positiveSignupScenario -->
  <testcase classname="CommonRunner.SignupTest" name="invalidEmailSignupScenario" time="0.0">
    <skipped/>
  </testcase> <!-- invalidEmailSignupScenario -->
  <testcase classname="CommonRunner.SignupTest" name="mismatchedPasswordSignupScenario" time="0.0">
    <skipped/>
  </testcase> <!-- mismatchedPasswordSignupScenario -->
  <testcase classname="CommonRunner.SignupTest" name="emptyFieldsSignupScenario" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFieldsSignupScenario -->
  <testcase classname="CommonRunner.LoginTest" name="positiveLoginScenario" time="0.001">
    <skipped/>
  </testcase> <!-- positiveLoginScenario -->
  <testcase classname="CommonRunner.LoginTest" name="invalidEmailLoginScenario" time="0.0">
    <skipped/>
  </testcase> <!-- invalidEmailLoginScenario -->
  <testcase classname="CommonRunner.LoginTest" name="invalidPasswordLoginScenario" time="0.0">
    <skipped/>
  </testcase> <!-- invalidPasswordLoginScenario -->
  <testcase classname="CommonRunner.LoginTest" name="emptyFieldsLoginScenario" time="0.0">
    <skipped/>
  </testcase> <!-- emptyFieldsLoginScenario -->
  <testcase classname="CommonRunner.OneWayBookingTest" name="positiveOneWayBookingScenario" time="0.0">
    <skipped/>
  </testcase> <!-- positiveOneWayBookingScenario -->
  <testcase classname="CommonRunner.OneWayBookingTest" name="negativeOneWayBookingScenario" time="0.0">
    <skipped/>
  </testcase> <!-- negativeOneWayBookingScenario -->
  <testcase classname="CommonRunner.RoundTripBookingTest" name="positiveRoundTripBookingScenario" time="0.0">
    <skipped/>
  </testcase> <!-- positiveRoundTripBookingScenario -->
  <testcase classname="CommonRunner.RoundTripBookingTest" name="negativeRoundTripBookingScenario" time="0.0">
    <skipped/>
  </testcase> <!-- negativeRoundTripBookingScenario -->
  <testcase classname="utils.BaseClass" name="@BeforeTest urlVerify" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest urlVerify -->
  <testcase classname="utils.BaseClass" name="@AfterTest quit" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest quit -->
  <testcase classname="utils.BaseClass" name="@BeforeTest urlVerify" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest urlVerify -->
  <testcase classname="utils.BaseClass" name="@BeforeTest setUp" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setUp -->
  <testcase classname="utils.BaseClass" name="@BeforeTest urlVerify" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest urlVerify -->
  <testcase classname="utils.BaseClass" name="@AfterTest quit" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest quit -->
  <testcase classname="utils.BaseClass" name="@BeforeTest setUp" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setUp -->
  <testcase classname="utils.BaseClass" name="@BeforeTest setUp" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest setUp -->
  <testcase classname="utils.BaseClass" name="@AfterTest quit" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest quit -->
</testsuite> <!-- Test -->
